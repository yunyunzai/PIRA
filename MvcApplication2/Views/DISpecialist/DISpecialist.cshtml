@model MvcApplication2.Models.DISpecialistModel

<script type="text/javascript">
    function ChangeListBoxWidth(obj) {
        obj.style.width = '';
    }
    function ResetListBoxWidth(obj, width) {
        obj.style.width = width;
    }
</script>

<script>
    $(function () {
        var availableTags = [
            @if (Model != null && Model.editModel != null && Model.editModel.newKeywords != null)
                             {
                                 foreach(string i in Model.editModel.newKeywords){
                                <text>"@i",</text>
        }
                           }
      ];
        $("#searchBar").autocomplete({
          source: availableTags
      });
  });
  </script>

<script>
    $(function () {
        $("#removeQuestion").click(function () {
            Model.numQuestion--;
                    });
                });
            </script>
            <script>
                $(function () {
                    $("#newQuestion").click(function () {
                        Model.numQuestion++;
                    });
                });
            </script>
<script>
    $(function () {
        $("#newRequest").click(function () {
            @*@{
                       
                Model.editModel = new MvcApplication2.Models.RequestViewModel();}*@
            $("#dispecialist").hide();
            $("#rborder").show();
        });
    });
    
</script>

<script>
    $(function () {
        $("#back").click(function () {
            $("#rborder").hide();
            $("#dispecialist").show();
        });
    });    
</script>

<!--Question-->
@*<script>
    var myEditor = new YAHOO.widget.SimpleEditor('msgpost', {
        height: '100px',
        width: '433px',
        animate: false,
        handleSubmit: true ,
        toolbar: {
            buttons: [
                {
                    group: 'textstyle', label: 'Font Style',
                    buttons: [
                        { type: 'push', label: 'Bold', value: 'bold' },
                        { type: 'push', label: 'Italic', value: 'italic' },
                        { type: 'push', label: 'Underline', value: 'underline' },
                        { type: 'separator' },
                        {
                            type: 'select', label: 'Arial', value: 'fontname', disabled: false,
                            menu: [
                                { text: 'Arial', checked: true },
                                { text: 'Arial Black' },
                                { text: 'Comic Sans MS' },
                                { text: 'Courier New' },
                                { text: 'Lucida Console' },
                                { text: 'Tahoma' },
                                { text: 'Times New Roman' },
                                { text: 'Trebuchet MS' },
                                { text: 'Verdana' }
                            ]
                        },
                        { type: 'spin', label: '13', value: 'fontsize', range: [9, 75], disabled: false },
                        { type: 'separator' },
                        { type: 'color', label: 'Font Color', value: 'forecolor', disabled: false },
                        { type: 'color', label: 'Background Color', value: 'backcolor', disabled: false }
                    ]
                }
            ]
        }
    });
    myEditor.render();
    //YAHOO.util.Event.on('submitButton', 'click', function () {
    //    myEditor.saveHTML();

    //});
</script>

<!--Response-->
<script>
    var myEditor = new YAHOO.widget.SimpleEditor('response', {
        height: '100px',
        width: '420px',
        animate: false,
        handleSubmit: true ,
        toolbar: {
            buttons: [
                {
                    group: 'textstyle', label: 'Font Style',
                    buttons: [
                        { type: 'push', label: 'Bold', value: 'bold' },
                        { type: 'push', label: 'Italic', value: 'italic' },
                        { type: 'push', label: 'Underline', value: 'underline' },
                        { type: 'separator' },
                        {
                            type: 'select', label: 'Arial', value: 'fontname', disabled: false,
                            menu: [
                                { text: 'Arial', checked: false },
                                { text: 'Arial Black' },
                                { text: 'Comic Sans MS' },
                                { text: 'Courier New' },
                                { text: 'Lucida Console' },
                                { text: 'Tahoma' },
                                { text: 'Times New Roman' },
                                { text: 'Trebuchet MS' },
                                { text: 'Verdana' }
                            ]
                        },
                        { type: 'spin', label: '13', value: 'fontsize', range: [9, 75], disabled: false },
                        { type: 'separator' },
                        { type: 'color', label: 'Font Color', value: 'forecolor', disabled: false },
                        { type: 'color', label: 'Background Color', value: 'backcolor', disabled: false }
                    ]
                }
            ]
        }
    });
    myEditor.render();
    //YAHOO.util.Event.on('save', 'click', function() {
    //   // document.getElementById('save').disabled = true;
    //    myEditor.saveHTML();
    //    setTimeout(function () {
    //        document.getElementById('save').disabled = true;
    //    }, 300);
    //});

</script>*@
@using (Html.BeginForm("filterRequestByKeyword", "DISpecialist"))
{
        
    @Html.Raw("<div>Search:</div><div>");

                                        List<SelectListItem> items = new List<SelectListItem>();

                                        items.Add(new SelectListItem
                                        {
                                            Text = "Keyword",
                                            Value = "1",
                                        });
                                        items.Add(new SelectListItem
                                        {
                                            Text = "RequestID",
                                            Value = "2"
                                        });
        
    @Html.DropDownListFor(x => x.searchModel.searchBy, new SelectList(items, "Value", "Text"))

    <div class="ui-widget">@Html.TextBoxFor(m => m.searchModel.searchKey, new { id = "searchBar" })
    <input type="submit" value="Search" /></div>

        
    @Html.Raw("</div>");
}
<style>
    div#resultList {
        height:300px;
        overflow-y:scroll;
        width:880px;
    }
    td {
        width:140px;

    }
    th {
        width: 115px;
        font:bold;
    }


</style>

<script>
    $(document).ready(function () {
        $("#scrollBorder tr:even").css("background-color", "#C6E2FF");
        $("#scrollBorder tr:odd").css("background-color", "#EFF1F1");


    });
</script>

@using (Html.BeginForm("view", "DISpecialist"))
{
    <div id="header">
        <table>

            <tr>
                    <th>RequestId</th>
                    <th>PatientId</th>
                    <th>Time Created</th>
                    <th>Created By</th>
                    <th>Completed By</th>
                    <th>Time Completed</th>
                </tr>

            </table>
        </div>
    
    
    <div id="resultList">

        @if (Model != null && Model.requests != null)
        {
            <table id="scrollBorder">
                
                @foreach (var item in Model.requests)
                {
                
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.request.RequestId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.patient.PatientId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.userCreateRequest.TimeCreated)
                        </td>
                        <td>
                            @Html.Label(item.createrProfile.FirstName + " " + item.createrProfile.LastName)
                        </td>
                        <td>
                            @Html.Label((item.completerProfile == null ? "" : item.completerProfile.FirstName) + " " + (item.completerProfile == null ? "" : item.completerProfile.LastName))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.userCompleteRequest.CompletionTime)
                        </td>
                        <td>
                            @{int a = 2; }
                            @*@{string name = "edit" + item.request.RequestId;}
                            @{string cname = "#"+name;}*@
                            @*<button  id="edit<%= item.request.RequestId %>">Edit</button>*@
                            @Html.ActionLink("edit", "edit", new { rid = item.request.RequestId })
                            @*("Edit", "create", "DISpecialist", null, new { id="edit"+item.request.RequestId})*@
                        </td>
                        
                    </tr>

                }
            </table> 
     
        }

  </div>
        <input type="submit" value="View Request" />
  
}




@*<div id="dispecialist">
    SEARCH BY: 
    <select>
        <option>RequestID</option>
        <option>Keyword</option>
    </select>
    <input type="text" />
    <button>Search</button>
    <br />
    <button id="newRequest">New Request</button>
</div>*@
@Html.ActionLink("New Request", "create")
@*<button id="newRequest">New Request</button>*@


@{if (Model == null || !Model.isEditorOpen)
  {
      @Html.Raw("<div id=\"rborder\" hidden>");
  }
  else
  {
      @Html.Raw("<div id=\"rborder\" show>");
  }}

    
    
    @using (Html.BeginForm("requestSave", "DISpecialist"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        if (Model.editModel != null)
        {
        <p><b>&nbsp;&nbsp;Request Form</b></p>
        <hr />
        <ul id="request">
            <li>Request ID: </li>
            <li>User: </li>
            <li>Date Created: </li>
            <li>Date Completed: </li>
            <li>Linked Requests: </li>
        </ul>
        <!--Caller-->
        <div id="subrborderleft">
            &nbsp;Caller
           <br />
            &nbsp;Name: 
                @Html.TextBoxFor(m => m.editModel.caller.Name, new { style = "width: 70px;" })
            @*<input type="text" style="width: 70px;" />*@
            &nbsp;Phone:
                @Html.TextBoxFor(m => m.editModel.caller.Phone, new { style = "width: 70px;" })
            @*<input type="text" style="width: 70px;" />*@
            &nbsp;Email:
                @Html.TextBoxFor(m => m.editModel.caller.Email, new { style = "width: 70px;" })
            @*<input type="text" style="width: 70px;" />*@
            <br />
            &nbsp;Caller Type: 
            @{List<SelectListItem> items = new List<SelectListItem>();
              items.Add(new SelectListItem
              {
                  Text = "Administrator",
                  Value = "admin"
              });
              items.Add(new SelectListItem
              {
                  Text = "Dietician",
                  Value = "rdn"
              });
              items.Add(new SelectListItem
              {
                  Text = "Drug Company",
                  Value = "drug_go"
              });
              items.Add(new SelectListItem
              {
                  Text = "Family Member",
                  Value = "family"
              });
              items.Add(new SelectListItem
              {
                  Text = "Family Physician",
                  Value = "gp"
              });
              items.Add(new SelectListItem
              {
                  Text = "General Public",
                  Value = "pub",
                  Selected = true
              });
              items.Add(new SelectListItem
              {
                  Text = "Librarian",
                  Value = "lib"
              });
              items.Add(new SelectListItem
              {
                  Text = "Naturopath",
                  Value = "nd"
              });
              items.Add(new SelectListItem
              {
                  Text = "News Media",
                  Value = "media"
              });
              items.Add(new SelectListItem
              {
                  Text = "Nurse",
                  Value = "rn"
              });
              items.Add(new SelectListItem
              {
                  Text = "Oncologist",
                  Value = "onc"
              });
              items.Add(new SelectListItem
              {
                  Text = "Other Health Care Professional",
                  Value = "hcp"
              });
              items.Add(new SelectListItem
              {
                  Text = "Other Physicians",
                  Value = "other_dr"
              });
              items.Add(new SelectListItem
              {
                  Text = "Patient",
                  Value = "patient"
              });
              items.Add(new SelectListItem
              {
                  Text = "Pharmacist",
                  Value = "rx"
              });
              items.Add(new SelectListItem
              {
                  Text = "Public Relations",
                  Value = "pr"
              });
              items.Add(new SelectListItem
              {
                  Text = "Radiation Therapist",
                  Value = "rt"
              });
              items.Add(new SelectListItem
              {
                  Text = "Researcher",
                  Value = "research"
              });
              items.Add(new SelectListItem
              {
                  Text = "Social Worker",
                  Value = "sw"
              });
              items.Add(new SelectListItem
              {
                  Text = "Student",
                  Value = "student"
              });
              items.Add(new SelectListItem
              {
                  Text = "Unknown",
                  Value = "other"
              });
              
              @Html.DropDownListFor(m => m.editModel.caller.TypeAbbreviate, items, new { size = "1", name = "D1", style = "width: 140px", onclick = "javascript:ChangeListBoxWidth(this);" }) ;            
              }
               @* <select size="1" id="D1" name="D1" style="width: 140px" onclick="javascript:ChangeListBoxWidth(this);"
                    onblur="javascript:ResetListBoxWidth(this,50)">
                    <option value="admin">Administrator</option>
                    <option value="dietician">Dietician</option>
                    <option value="drugCompany">Drug Company</option>
                    <option value="familyMember">Family Member</option>
                    <option value="familyPhys">Family Physician</option>
                    <option value="generalPublic" selected>General Public</option>
                    <option value="librarian">Librarian</option>
                    <option value="naturopath">Naturopath</option>
                    <option value="newsMedia">News Media</option>
                    <option value="nurse">Nurse</option>
                    <option value="oncologist">Oncologist</option>
                    <option value="ohcp">Other Health Care Professional</option>
                    <option value="oPhysician">Other Physicians</option>
                    <option value="patient">Patient</option>
                    <option value="pharmacist">Pharmacist</option>
                    <option value="publicRelations">Public Relations</option>
                    <option value="radiation">Radiation therapist</option>
                    <option value="researcher">Researcher</option>
                    <option value="socialWorker">Social Worker</option>
                </select>*@
            
            <br />
            &nbsp;Geographic Location: 
            @{items = new List<SelectListItem>();
              items.Add(new SelectListItem
              {
                  Text = "Alberta",
                  Value = "Alberta"
              });
              items.Add(new SelectListItem
              {
                  Text = "Abbotsford Cancer",
                  Value = "Abbotsford Cancer"
              });
              items.Add(new SelectListItem
              {
                  Text = "BC - Not Classified",
                  Value = "BC - Not Classified"
              });
              items.Add(new SelectListItem
              {
                  Text = "Centre For The Southern Interior",
                  Value = "Centre For The Southern Interior"
              });
              items.Add(new SelectListItem
              {
                  Text = "Fraser Health Region",
                  Value = "Fraser Health Region"
              });
              items.Add(new SelectListItem
              {
                  Text = "Fraser Valley Centre",
                  Value = "Fraser Valley Centre"
              });
              items.Add(new SelectListItem
              {
                  Text = "Interior Health Region",
                  Value = "Interior Health Region"
              });
              items.Add(new SelectListItem
              {
                  Text = "Manitoba",
                  Value = "Manitoba"
              });
              items.Add(new SelectListItem
              {
                  Text = "New Brunswick",
                  Value = "New Brunswick"
              });
              items.Add(new SelectListItem
              {
                  Text = "Newfoundland",
                  Value = "Newfoundland"
              });
              items.Add(new SelectListItem
              {
                  Text = "Northern Health Region",
                  Value = "Northern Health Region"
              });
              items.Add(new SelectListItem
              {
                  Text = "Nova Scotia",
                  Value = "Nova Scotia"
              });
              items.Add(new SelectListItem
              {
                  Text = "Northwest Territories",
                  Value = "Northwest Territories"
              });
              items.Add(new SelectListItem
              {
                  Text = "Nunavut",
                  Value = "Nunavut"
              });
              items.Add(new SelectListItem
              {
                  Text = "Ontario",
                  Value = "Ontario"
              });
              items.Add(new SelectListItem
              {
                  Text = "Africa, Asia, Europe, USA",
                  Value = "Africa, Asia, Europe, USA"
              });
              items.Add(new SelectListItem
              {
                  Text = "Prince Edward Island",
                  Value = "Prince Edward Island"
              });
              items.Add(new SelectListItem
              {
                  Text = "Quebec",
                  Value = "Quebec"
              });
              items.Add(new SelectListItem
              {
                  Text = "Not Classified",
                  Value = "Not Classified"
              });
              items.Add(new SelectListItem
              {
                  Text = "Vancouver Cancer Centre",
                  Value = "Vancouver Cancer Centre"
              });
              items.Add(new SelectListItem
              {
                  Text = "Vancouver Coastal Region",
                  Value = "Vancouver Coastal Region"
              });
              items.Add(new SelectListItem
              {
                  Text = "Vancouver Island Centre",
                  Value = "Vancouver Island Centre"
              });
              items.Add(new SelectListItem
              {
                  Text = "Vancouver Island Region",
                  Value = "Vancouver Island Region"
              });
              items.Add(new SelectListItem
              {
                  Text = "Yukon",
                  Value = "Yukon"
              });
              @Html.DropDownListFor(m => m.editModel.caller.Region, items, new { size = "1", name = "D1", style = "width: 140px", onclick = "javascript:ChangeListBoxWidth(this);" }) ;            
              }
           </div>
        
        
        
        <!--Patient-->
        <div id="subrborderright">
            &nbsp;Patient:
            <br />
            &nbsp;Name: 
            @Html.TextBoxFor(m => m.editModel.patient.Name, new { style = "width: 70px;" })
            @*<input type="text" style="width: 70px;" />*@
            &nbsp;Agency ID:
            @Html.TextBoxFor(m => m.editModel.patient.AgencyID, new { style = "width: 50px;" })
            @*<input type="text" style="width: 50px;" />*@
            &nbsp;Age:
            @Html.TextBoxFor(m => m.editModel.patient.Age, new { style = "width: 50px;" })
            @*<input type="text" style="width: 50px;" />*@
            <br />
            &nbsp;Gender
            @{
                                                                                                                                                                                      items = new List<SelectListItem>();
                                                                                                                                                                                      items.Add(new SelectListItem
                                                                                                                                                                                      {
                                                                                                                                                                                          Text = "Male",
                                                                                                                                                                                          Value = "Male"
                                                                                                                                                                                      });
                                                                                                                                                                                      items.Add(new SelectListItem
                                                                                                                                                                                      {
                                                                                                                                                                                          Text = "Female",
                                                                                                                                                                                          Value = "Female"
                                                                                                                                                                                      });
              @Html.DropDownListFor(m => m.editModel.patient.Gender, items, new { size = "1", name = "D1", style = "width: 140px", onclick = "javascript:ChangeListBoxWidth(this);" }) ;            
            }
            @*<select name="Gender Type">
                <option value="male">Male</option>
                <option value="female">Female</option>
            </select>*@
        </div>
        
        
        
        <!--Question-->
            if (Model.editModel.newQuestions!=null)
            {
                for (int i = 0; i < Model.editModel.newQuestions.Count(); i++)
                {
                    @questionPanel(i);
                }
            }
        
        
        
        
        <div id="rbuttons">
            
            @Html.ActionLink("Remove Question", "removeQuestion", "", new { style="background-color:#e3e3e3; border:1px"})

            @Html.ActionLink("Add New Question", "addQuestion", "", new { style="background-color:#e3e3e3"})
            
            
            @Html.ActionLink("Cancel", "cancel", "", new { style="background-color:#e3e3e3"})
            <input id = "save" type="submit"  value="SAVE" />
            @*<button id="cancel">CANCEL</button>*@
        </div>
   
        <div style="clear: both"></div>
        }
    }



@helper questionPanel(int numQuestion)
{    
    <script>
        var myEditor = new YAHOO.widget.SimpleEditor('msgpost@(numQuestion)'  , {
            height: '100px',
            width: '433px',
            animate: false,
            handleSubmit: true,
            toolbar: {
                buttons: [
                    {
                        group: 'textstyle', label: 'Font Style',
                        buttons: [
                            { type: 'push', label: 'Bold', value: 'bold' },
                            { type: 'push', label: 'Italic', value: 'italic' },
                            { type: 'push', label: 'Underline', value: 'underline' },
                            { type: 'separator' },
                            {
                                type: 'select', label: 'Arial', value: 'fontname', disabled: false,
                                menu: [
                                    { text: 'Arial', checked: true },
                                    { text: 'Arial Black' },
                                    { text: 'Comic Sans MS' },
                                    { text: 'Courier New' },
                                    { text: 'Lucida Console' },
                                    { text: 'Tahoma' },
                                    { text: 'Times New Roman' },
                                    { text: 'Trebuchet MS' },
                                    { text: 'Verdana' }
                                ]
                            },
                            { type: 'spin', label: '13', value: 'fontsize', range: [9, 75], disabled: false },
                            { type: 'separator' },
                            { type: 'color', label: 'Font Color', value: 'forecolor', disabled: false },
                            { type: 'color', label: 'Background Color', value: 'backcolor', disabled: false }
                        ]
                    }
                ]
            }
        });
        myEditor.render();

</script>

<!--Response-->
<script>
    var myEditor = new YAHOO.widget.SimpleEditor('response@(numQuestion)', {
        height: '100px',
        width: '420px',
        animate: false,
        handleSubmit: true,
        toolbar: {
            buttons: [
                {
                    group: 'textstyle', label: 'Font Style',
                    buttons: [
                        { type: 'push', label: 'Bold', value: 'bold' },
                        { type: 'push', label: 'Italic', value: 'italic' },
                        { type: 'push', label: 'Underline', value: 'underline' },
                        { type: 'separator' },
                        {
                            type: 'select', label: 'Arial', value: 'fontname', disabled: false,
                            menu: [
                                { text: 'Arial', checked: false },
                                { text: 'Arial Black' },
                                { text: 'Comic Sans MS' },
                                { text: 'Courier New' },
                                { text: 'Lucida Console' },
                                { text: 'Tahoma' },
                                { text: 'Times New Roman' },
                                { text: 'Trebuchet MS' },
                                { text: 'Verdana' }
                            ]
                        },
                        { type: 'spin', label: '13', value: 'fontsize', range: [9, 75], disabled: false },
                        { type: 'separator' },
                        { type: 'color', label: 'Font Color', value: 'forecolor', disabled: false },
                        { type: 'color', label: 'Background Color', value: 'backcolor', disabled: false }
                    ]
                }
            ]
        }
    });
    myEditor.render();

</script>
    
    
    <!--Question-->
        <div id="bottom@(numQuestion)">
            <div>
            <div class="yui-skin-sam" style="margin: 8px; float: left">
                &nbsp;Question:

         @Html.TextAreaFor(m => m.editModel.newQuestions[numQuestion].QuestionContent, new { name = "msgpost" + numQuestion, id = "msgpost" + numQuestion, cols = "50", rows = "10" })
                
            </div>

            <div class="yui-skin-sam" style="margin: 8px; float: right">
                &nbsp;Response:


        @Html.TextAreaFor(m => m.editModel.newQuestions[numQuestion].Response, new { name = "msgpost" + numQuestion, id = "response" + numQuestion, cols = "50", rows = "10" })

            </div>
                </div>


            <br />
            &nbsp;Tumour Group: 

            @{List<SelectListItem> items = new List<SelectListItem>();
              items.Add(new SelectListItem
              {
                  Text = "Breast",
                  Value = "br"
              });
              items.Add(new SelectListItem
              {
                  Text = "Central Nervous System",
                  Value = "cns"
              });
              items.Add(new SelectListItem
              {
                  Text = "Endocrine",
                  Value = "endo"
              });
              items.Add(new SelectListItem
              {
                  Text = "Gastrointestinal",
                  Value = "gi"
              });
              items.Add(new SelectListItem
              {
                  Text = "General",
                  Value = "gen"
              });
              items.Add(new SelectListItem
              {
                  Text = "Gynaecology",
                  Value = "gu"
              });
              items.Add(new SelectListItem
              {
                  Text = "Genitourinary",
                  Value = "go"
              });
              items.Add(new SelectListItem
              {
                  Text = "Head and Neck",
                  Value = "h&n"
              });
              items.Add(new SelectListItem
              {
                  Text = "Leukemia",
                  Value = "leu"
              });
              items.Add(new SelectListItem
              {
                  Text = "Lung",
                  Value = "lu"
              });
              items.Add(new SelectListItem
              {
                  Text = "Lymphoma",
                  Value = "ly"
              });
              items.Add(new SelectListItem
              {
                  Text = "Melanoma",
                  Value = "me"
              });
              items.Add(new SelectListItem
              {
                  Text = "Multiple Myeloma",
                  Value = "mm"
              });
              items.Add(new SelectListItem
              {
                  Text = "Ocular",
                  Value = "oc"
              });
              items.Add(new SelectListItem
              {
                  Text = "Pediatrics",
                  Value = "ped"
              });
              items.Add(new SelectListItem
              {
                  Text = "Primary Unknown",
                  Value = "pu"
              });
              items.Add(new SelectListItem
              {
                  Text = "Sarcoma",
                  Value = "sa"
              });
              items.Add(new SelectListItem
              {
                  Text = "Supportive Care",
                  Value = "supp"
              });
              @Html.DropDownListFor(m => m.editModel.newQuestions[numQuestion].TumorTypeAbbreviate, items, new { size = "1", name = "D1", style = "width: 140px", onclick = "javascript:ChangeListBoxWidth(this);" }) ;            
              }

            &nbsp;Question Type
            @{items = new List<SelectListItem>();
              items.Add(new SelectListItem
              {
                  Text = "Adverse Effects",
                  Value = "a/e"
              });
              items.Add(new SelectListItem
              {
                  Text = "CAM",
                  Value = "cam"
              });
              items.Add(new SelectListItem
              {
                  Text = "Coverage/Funding/Reimbursement",
                  Value = "cost"
              });
              items.Add(new SelectListItem
              {
                  Text = "Drug Administration",
                  Value = "admin"
              });
              items.Add(new SelectListItem
              {
                  Text = "Drug Availability",
                  Value = "avail"
              });
              items.Add(new SelectListItem
              {
                  Text = "Drug Dosing",
                  Value = "dose"
              });
              items.Add(new SelectListItem
              {
                  Text = "Drug Interactions",
                  Value = "di"
              });
              items.Add(new SelectListItem
              {
                  Text = "Other",
                  Value = "other"
              });
              items.Add(new SelectListItem
              {
                  Text = "Therapy Selection",
                  Value = "ther"
              });              
              @Html.DropDownListFor(m => m.editModel.newQuestions[numQuestion].QuestionTypeAbbreviate, items, new { size = "1", name = "D1", style = "width: 140px", onclick = "javascript:ChangeListBoxWidth(this);" }) ;            
              }

            <br />
            &nbsp;Severity
             @{items = new List<SelectListItem>();
               items.Add(new SelectListItem
               {
                   Text = "Major",
                   Value = "Major"
               });
               items.Add(new SelectListItem
               {
                   Text = "Moderate",
                   Value = "Moderate"
               });
               items.Add(new SelectListItem
               {
                   Text = "Minor",
                   Value = "Minor"
               });             
                           
              @Html.DropDownListFor(m => m.editModel.newQuestions[numQuestion].Severity, items, new { size = "1", name = "D1", style = "width: 140px", onclick = "javascript:ChangeListBoxWidth(this);" }) ;            
             }

            
            &nbsp;&nbsp;&nbsp;Probability
            @{items = new List<SelectListItem>();
              items.Add(new SelectListItem
              {
                  Text = "Certain",
                  Value = "Certain"
              });
              items.Add(new SelectListItem
              {
                  Text = "Probable",
                  Value = "Probable"
              });
              items.Add(new SelectListItem
              {
                  Text = "Possible",
                  Value = "Possible"
              });
              items.Add(new SelectListItem
              {
                  Text = "Unlikely",
                  Value = "Unlikely"
              });        
              @Html.DropDownListFor(m => m.editModel.newQuestions[numQuestion].Probability, items, new { size = "1", name = "D1", style = "width: 140px", onclick = "javascript:ChangeListBoxWidth(this);" }) ;            
             }

            &nbsp;&nbsp;&nbsp;Impact Score: 
                @Html.TextBoxFor(m => m.editModel.newQuestions[numQuestion].ComputedImpact, new { readOnly = true, style = "width: 50px" })
            &nbsp;&nbsp;&nbsp;Time Taken:
                @Html.TextBoxFor(m => m.editModel.newQuestions[numQuestion].TimeTaken, new { style = "width: 50px" }) minutes <br>
            &nbsp;Keywords:
                @Html.TextBoxFor(m => m.editModel.newKeywords[numQuestion], new { style = "width: 110px" })

            
            &nbsp;References:
            @Html.TextBoxFor(m => m.editModel.newReferences[numQuestion].ReferenceContent, new { style = "width: 325px" })


        </div>
    }



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}